name: Build and Deploy Wheels

on:
  pull_request:
    branches:
      - "*"

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive  # Important for pybind11 submodule

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build cibuildwheel

    - name: Build wheels
      env:
        CIBW_ARCHS: "x86_64"  # Only build for AMD64
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_BUILD: |
          if [ "$(uname)" == "Darwin" ]; then
            brew install cmake
          else
            sudo apt-get update && sudo apt-get install -y cmake
          fi
      run: |
        python -m cibuildwheel --platform ${{ matrix.os == 'macos-latest' && 'macos' || 'linux' }} --output-dir wheelhouse

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: wheels

  deploy:
    name: Deploy to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: wheels
        path: wheelhouse

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install twine
      run: python -m pip install twine

    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload wheelhouse/*.whl 